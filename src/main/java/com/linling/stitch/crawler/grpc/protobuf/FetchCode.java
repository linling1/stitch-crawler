// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fetch.proto

package com.linling.stitch.crawler.grpc.protobuf;

/**
 * <pre>
 * 可根据需求自行修改
 * </pre>
 *
 * Protobuf enum {@code crawler.FetchCode}
 */
public enum FetchCode
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Page was not crawlered yet
   * </pre>
   *
   * <code>UNFETCHED = 0;</code>
   */
  UNFETCHED(0),
  /**
   * <pre>
   * Page was successfully fetched
   * </pre>
   *
   * <code>SUCCESS = 1;</code>
   */
  SUCCESS(1),
  /**
   * <pre>
   * IO ERROR
   * </pre>
   *
   * <code>IO_ERROR = 2;</code>
   */
  IO_ERROR(2),
  /**
   * <pre>
   * Unspecified error occured. Further information may be provided in args.
   * </pre>
   *
   * <code>FETCHED_ERROR = 3;</code>
   */
  FETCHED_ERROR(3),
  /**
   * <pre>
   * Timeout error
   * </pre>
   *
   * <code>TIMEOUT_ERROR = 4;</code>
   */
  TIMEOUT_ERROR(4),
  /**
   * <pre>
   * Illegal argument error
   * </pre>
   *
   * <code>ILLEGAL_ARGUMENT_ERROR = 5;</code>
   */
  ILLEGAL_ARGUMENT_ERROR(5),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Page was not crawlered yet
   * </pre>
   *
   * <code>UNFETCHED = 0;</code>
   */
  public static final int UNFETCHED_VALUE = 0;
  /**
   * <pre>
   * Page was successfully fetched
   * </pre>
   *
   * <code>SUCCESS = 1;</code>
   */
  public static final int SUCCESS_VALUE = 1;
  /**
   * <pre>
   * IO ERROR
   * </pre>
   *
   * <code>IO_ERROR = 2;</code>
   */
  public static final int IO_ERROR_VALUE = 2;
  /**
   * <pre>
   * Unspecified error occured. Further information may be provided in args.
   * </pre>
   *
   * <code>FETCHED_ERROR = 3;</code>
   */
  public static final int FETCHED_ERROR_VALUE = 3;
  /**
   * <pre>
   * Timeout error
   * </pre>
   *
   * <code>TIMEOUT_ERROR = 4;</code>
   */
  public static final int TIMEOUT_ERROR_VALUE = 4;
  /**
   * <pre>
   * Illegal argument error
   * </pre>
   *
   * <code>ILLEGAL_ARGUMENT_ERROR = 5;</code>
   */
  public static final int ILLEGAL_ARGUMENT_ERROR_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static FetchCode valueOf(int value) {
    return forNumber(value);
  }

  public static FetchCode forNumber(int value) {
    switch (value) {
      case 0: return UNFETCHED;
      case 1: return SUCCESS;
      case 2: return IO_ERROR;
      case 3: return FETCHED_ERROR;
      case 4: return TIMEOUT_ERROR;
      case 5: return ILLEGAL_ARGUMENT_ERROR;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<FetchCode>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      FetchCode> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<FetchCode>() {
          public FetchCode findValueByNumber(int number) {
            return FetchCode.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.linling.stitch.crawler.grpc.protobuf.CrawlerProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final FetchCode[] VALUES = values();

  public static FetchCode valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private FetchCode(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:crawler.FetchCode)
}

